#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
HW5
\end_layout

\begin_layout Author
Miguel A.
 Montoya Z.
 (A01226045)
\end_layout

\begin_layout Enumerate
Implement Dijkstra Algorithm
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
\begin_inset Formula $ $
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigbreak
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Implement Bellman-Ford Algoritm
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
\begin_inset Formula $ $
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigbreak
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Implement the Parallel Matrix Multiplication using OpenMP
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $ $
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigbreak
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Implement the Graham Scan Algorithm
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $ $
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigbreak
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
STINGY SAT is the following problem:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Given a set of clauses (each a disjunction of literals) and an integer 
\begin_inset Formula $k$
\end_inset

, find a satisfying assignment in which at most 
\begin_inset Formula $k$
\end_inset

 variables are true, if such an assignment exists
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallbreak
\end_layout

\end_inset

Prove that STINGY SAT is NP-complete.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
medbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
1.- Prove that Stingy SAT is NP:
\end_layout

\begin_layout Plain Layout
Given a solution to STINGY SAT, its validity can be checked by evaluating.
 The check for less than 
\begin_inset Formula $k$
\end_inset

 variables are true by checking each and counting.
\end_layout

\begin_layout Plain Layout
2.- SAT can be reduced to STINGY SAT.
 
\end_layout

\begin_layout Plain Layout
For each accepted formula 
\begin_inset Formula $f$
\end_inset

 of SAT with at most 
\begin_inset Formula $n$
\end_inset

 true variables, a configuration for STINGY SAT 
\begin_inset Formula $(f,n)$
\end_inset

 is accepted.
\end_layout

\begin_layout Plain Layout
Any accepted configuration 
\begin_inset Formula $(f,n)$
\end_inset

 of STINGY SAT would provide a solution for SAT witht he formula 
\begin_inset Formula $f$
\end_inset

.
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigbreak
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The set-partition problem is the following:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
The set-partition problem takes as input a set 
\begin_inset Formula $S$
\end_inset

 of numbers.
 The question is whether 
\begin_inset Formula $S$
\end_inset

 can be partitioned into two sets 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $\overline{A}=Sâˆ’A$
\end_inset

 such that 
\begin_inset Formula $\sum_{x\in A}x=\sum_{x\in\overline{A}}x$
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallbreak
\end_layout

\end_inset

Prove that the set-partition problem is NP-complete.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
medbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
1.- Prove that set-partition is NP:
\end_layout

\begin_layout Plain Layout
Given two sets, the problem can be veryfied by comparing the two total sums.
\end_layout

\begin_layout Plain Layout
2.- SUBSET-SUM can be reduced to SET-PARTITION
\end_layout

\begin_layout Plain Layout
Being 
\begin_inset Formula $sum$
\end_inset

 the total sum of elemnts in 
\begin_inset Formula $X$
\end_inset

 and 
\begin_inset Formula $target$
\end_inset

 the target total of SUBSET-SUM, we can declare 
\begin_inset Formula $X'=X\cup\{sum-2target\}$
\end_inset

 making the total of 
\begin_inset Formula $X'=2sum-2target$
\end_inset

, and feed that to SET-PARTITION.
\end_layout

\begin_layout Plain Layout
If the configuration 
\begin_inset Formula $(X,target)$
\end_inset

 is acceted in SUBSET-SUM, SUBSET-PARTITION must accept 
\begin_inset Formula $X'$
\end_inset

.
 Because the remaining numbers in 
\begin_inset Formula $X$
\end_inset

 would be 
\begin_inset Formula $sum-target$
\end_inset

,
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigbreak
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Show that the following is NP-complete.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
smallbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
INPUT: 
\series default
Two graphs 
\begin_inset Formula $G_{1}=(V_{1},E_{1})$
\end_inset

 and 
\begin_inset Formula $G_{2}=(V_{2},E_{2})$
\end_inset

; a budget 
\begin_inset Formula $b$
\end_inset

.

\series bold
 
\end_layout

\begin_layout Plain Layout

\series bold
OUTPUT: 
\series default
Two sets of nodes 
\begin_inset Formula $Vâ€²_{1}âŠ†V_{1}$
\end_inset

 and 
\begin_inset Formula $Vâ€²_{1}âŠ†V_{1}$
\end_inset

 whose deletion leaves at least 
\begin_inset Formula $b$
\end_inset

 nodes in each graph, and makes the two graphs identical.
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
medbreak
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula $ $
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
bigbreak
\end_layout

\end_inset


\end_layout

\end_body
\end_document
